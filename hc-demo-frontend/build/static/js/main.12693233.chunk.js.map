{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isLoaded","applications","gridOptions","getRowClass","params","data","columnDefs","headerName","field","sortable","filter","_this2","fetch","then","res","json","setState","react_default","a","createElement","className","style","height","width","main","rowData","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.12693233.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\n\nclass App extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      applications: [],\n      gridOptions: {\n        getRowClass: function(params) {\n          return params.data['TARGET'] === 1 ? \"credit-default\" : \"credit-ok\";\n        },\n        columnDefs: [\n          {headerName: 'SK_ID_CURR', field: 'SK_ID_CURR', sortable: true, filter: true},\n          {headerName: 'NAME_CONTRACT_TYPE', field: 'NAME_CONTRACT_TYPE', sortable: true, filter: true},\n          {headerName: 'CODE_GENDER', field: 'CODE_GENDER', sortable: true, filter: true},\n          {headerName: 'FLAG_OWN_CAR', field: 'FLAG_OWN_CAR', sortable: true, filter: true},\n          {headerName: 'FLAG_OWN_REALTY', field: 'FLAG_OWN_REALTY', sortable: true, filter: true},\n          {headerName: 'CNT_CHILDREN', field: 'CNT_CHILDREN', sortable: true, filter: 'agNumberColumnFilter'},\n          {headerName: 'AMT_INCOME_TOTAL', field: 'AMT_INCOME_TOTAL', sortable: true, filter: 'agNumberColumnFilter'},\n          {headerName: 'AMT_CREDIT', field: 'AMT_CREDIT', sortable: true, filter: 'agNumberColumnFilter'},\n          {headerName: 'AMT_ANNUITY', field: 'AMT_ANNUITY', sortable: true, filter: 'agNumberColumnFilter'},\n          {headerName: 'AMT_GOODS_PRICE', field: 'AMT_GOODS_PRICE', sortable: true, filter: 'agNumberColumnFilter'},\n          {headerName: 'NAME_TYPE_SUITE', field: 'NAME_TYPE_SUITE', sortable: true, filter: true},\n          {headerName: 'NAME_INCOME_TYPE', field: 'NAME_INCOME_TYPE', sortable: true, filter: true},\n          {headerName: 'NAME_EDUCATION_TYPE', field: 'NAME_EDUCATION_TYPE', sortable: true, filter: true},\n          {headerName: 'NAME_FAMILY_STATUS', field: 'NAME_FAMILY_STATUS', sortable: true, filter: true},\n          {headerName: 'NAME_HOUSING_TYPE', field: 'NAME_HOUSING_TYPE', sortable: true, filter: true},\n          {headerName: 'REGION_POPULATION_RELATIVE', field: 'REGION_POPULATION_RELATIVE', sortable: true, filter: 'agNumberColumnFilter'},\n          {headerName: 'DAYS_BIRTH', field: 'DAYS_BIRTH', sortable: true, filter: 'agNumberColumnFilter'},\n          {headerName: 'DAYS_EMPLOYED', field: 'DAYS_EMPLOYED', sortable: true, filter: 'agNumberColumnFilter'},\n          {headerName: 'DAYS_REGISTRATION', field: 'DAYS_REGISTRATION', sortable: true, filter: 'agNumberColumnFilter'},\n          {headerName: 'DAYS_ID_PUBLISH', field: 'DAYS_ID_PUBLISH', sortable: true, filter: 'agNumberColumnFilter'},\n          {headerName: 'OWN_CAR_AGE', field: 'OWN_CAR_AGE', sortable: true, filter: 'agNumberColumnFilter'},\n          {headerName: 'FLAG_MOBIL', field: 'FLAG_MOBIL', sortable: true, filter: true},\n          {headerName: 'FLAG_EMP_PHONE', field: 'FLAG_EMP_PHONE', sortable: true, filter: true},\n          {headerName: 'FLAG_WORK_PHONE', field: 'FLAG_WORK_PHONE', sortable: true, filter: true},\n          {headerName: 'FLAG_CONT_MOBILE', field: 'FLAG_CONT_MOBILE', sortable: true, filter: true},\n          {headerName: 'FLAG_PHONE', field: 'FLAG_PHONE', sortable: true, filter: true},\n          {headerName: 'FLAG_EMAIL', field: 'FLAG_EMAIL', sortable: true, filter: true},\n          {headerName: 'OCCUPATION_TYPE', field: 'OCCUPATION_TYPE', sortable: true, filter: true},\n          {headerName: 'CNT_FAM_MEMBERS', field: 'CNT_FAM_MEMBERS', sortable: true, filter: 'agNumberColumnFilter'},\n          {headerName: 'REGION_RATING_CLIENT', field: 'REGION_RATING_CLIENT', sortable: true, filter: 'agNumberColumnFilter'},\n          {headerName: 'REGION_RATING_CLIENT_W_CITY', field: 'REGION_RATING_CLIENT_W_CITY', sortable: true, filter: 'agNumberColumnFilter'},\n          {headerName: 'WEEKDAY_APPR_PROCESS_START', field: 'WEEKDAY_APPR_PROCESS_START', sortable: true, filter: 'agNumberColumnFilter'},\n          {headerName: 'HOUR_APPR_PROCESS_START', field: 'HOUR_APPR_PROCESS_START', sortable: true, filter: 'agNumberColumnFilter'},\n          {headerName: 'REG_REGION_NOT_LIVE_REGION', field: 'REG_REGION_NOT_LIVE_REGION', sortable: true, filter: 'agNumberColumnFilter'},\n        ]\n      },\n    };\n  }\n\n  componentDidMount() {\n    fetch('/api/application')\n      .then(res => res.json())\n      .then(res => {\n        this.setState({\n          isLoaded: true,\n          applications: res\n        })\n      })\n  }\n\n  render() {\n    return (\n      <div \n        className=\"ag-theme-balham\"\n        style={{ \n        height: '100%', \n        width: '100%' }} \n      >\n        <AgGridReact\n          gridOptions={this.state.gridOptions}\n          rowData={this.state.applications}>\n        </AgGridReact>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}